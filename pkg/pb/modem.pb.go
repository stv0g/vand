// SPDX-FileCopyrightText: 2023 Steffen Vogel <post@steffenvogel.de>
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: modem.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ModemState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wwan         *ModemState_WWAN     `protobuf:"bytes,1,opt,name=wwan,proto3" json:"wwan,omitempty"`
	Wifi         *ModemState_Wifi     `protobuf:"bytes,2,opt,name=wifi,proto3" json:"wifi,omitempty"`
	Battery      *ModemState_Battery  `protobuf:"bytes,4,opt,name=battery,proto3" json:"battery,omitempty"`
	Sms          *ModemState_SMS      `protobuf:"bytes,9,opt,name=sms,proto3" json:"sms,omitempty"`
	SerialNumber string               `protobuf:"bytes,5,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Clients      []*ModemState_Client `protobuf:"bytes,7,rep,name=clients,proto3" json:"clients,omitempty"`
	Temperature  float32              `protobuf:"fixed32,8,opt,name=temperature,proto3" json:"temperature,omitempty"`
}

func (x *ModemState) Reset() {
	*x = ModemState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modem_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModemState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemState) ProtoMessage() {}

func (x *ModemState) ProtoReflect() protoreflect.Message {
	mi := &file_modem_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModemState.ProtoReflect.Descriptor instead.
func (*ModemState) Descriptor() ([]byte, []int) {
	return file_modem_proto_rawDescGZIP(), []int{0}
}

func (x *ModemState) GetWwan() *ModemState_WWAN {
	if x != nil {
		return x.Wwan
	}
	return nil
}

func (x *ModemState) GetWifi() *ModemState_Wifi {
	if x != nil {
		return x.Wifi
	}
	return nil
}

func (x *ModemState) GetBattery() *ModemState_Battery {
	if x != nil {
		return x.Battery
	}
	return nil
}

func (x *ModemState) GetSms() *ModemState_SMS {
	if x != nil {
		return x.Sms
	}
	return nil
}

func (x *ModemState) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *ModemState) GetClients() []*ModemState_Client {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *ModemState) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type ModemState_WWAN struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network         *ModemState_WWAN_Network        `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Operator        string                          `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	ConnectionText  string                          `protobuf:"bytes,3,opt,name=connection_text,json=connectionText,proto3" json:"connection_text,omitempty"`
	RegisterNetwork string                          `protobuf:"bytes,4,opt,name=register_network,json=registerNetwork,proto3" json:"register_network,omitempty"`
	Roaming         bool                            `protobuf:"varint,7,opt,name=roaming,proto3" json:"roaming,omitempty"`
	Ipv4            string                          `protobuf:"bytes,8,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6            string                          `protobuf:"bytes,9,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	Mtu             uint32                          `protobuf:"varint,10,opt,name=mtu,proto3" json:"mtu,omitempty"`
	RadioQuality    uint32                          `protobuf:"varint,11,opt,name=radio_quality,json=radioQuality,proto3" json:"radio_quality,omitempty"`
	Imsi            string                          `protobuf:"bytes,12,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Imei            string                          `protobuf:"bytes,13,opt,name=imei,proto3" json:"imei,omitempty"`
	Iccid           string                          `protobuf:"bytes,14,opt,name=iccid,proto3" json:"iccid,omitempty"`
	Band            uint32                          `protobuf:"varint,15,opt,name=band,proto3" json:"band,omitempty"`
	ChanIdDl        uint32                          `protobuf:"varint,16,opt,name=chan_id_dl,json=chanIdDl,proto3" json:"chan_id_dl,omitempty"`
	ChanIdUl        uint32                          `protobuf:"varint,17,opt,name=chan_id_ul,json=chanIdUl,proto3" json:"chan_id_ul,omitempty"`
	Connected       bool                            `protobuf:"varint,18,opt,name=connected,proto3" json:"connected,omitempty"`
	SignalStrength  *ModemState_WWAN_SignalStrength `protobuf:"bytes,19,opt,name=signal_strength,json=signalStrength,proto3" json:"signal_strength,omitempty"`
}

func (x *ModemState_WWAN) Reset() {
	*x = ModemState_WWAN{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modem_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModemState_WWAN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemState_WWAN) ProtoMessage() {}

func (x *ModemState_WWAN) ProtoReflect() protoreflect.Message {
	mi := &file_modem_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModemState_WWAN.ProtoReflect.Descriptor instead.
func (*ModemState_WWAN) Descriptor() ([]byte, []int) {
	return file_modem_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ModemState_WWAN) GetNetwork() *ModemState_WWAN_Network {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *ModemState_WWAN) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *ModemState_WWAN) GetConnectionText() string {
	if x != nil {
		return x.ConnectionText
	}
	return ""
}

func (x *ModemState_WWAN) GetRegisterNetwork() string {
	if x != nil {
		return x.RegisterNetwork
	}
	return ""
}

func (x *ModemState_WWAN) GetRoaming() bool {
	if x != nil {
		return x.Roaming
	}
	return false
}

func (x *ModemState_WWAN) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *ModemState_WWAN) GetIpv6() string {
	if x != nil {
		return x.Ipv6
	}
	return ""
}

func (x *ModemState_WWAN) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *ModemState_WWAN) GetRadioQuality() uint32 {
	if x != nil {
		return x.RadioQuality
	}
	return 0
}

func (x *ModemState_WWAN) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *ModemState_WWAN) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *ModemState_WWAN) GetIccid() string {
	if x != nil {
		return x.Iccid
	}
	return ""
}

func (x *ModemState_WWAN) GetBand() uint32 {
	if x != nil {
		return x.Band
	}
	return 0
}

func (x *ModemState_WWAN) GetChanIdDl() uint32 {
	if x != nil {
		return x.ChanIdDl
	}
	return 0
}

func (x *ModemState_WWAN) GetChanIdUl() uint32 {
	if x != nil {
		return x.ChanIdUl
	}
	return 0
}

func (x *ModemState_WWAN) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *ModemState_WWAN) GetSignalStrength() *ModemState_WWAN_SignalStrength {
	if x != nil {
		return x.SignalStrength
	}
	return nil
}

type ModemState_Client struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipv4   string `protobuf:"bytes,1,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Mac    string `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Media  string `protobuf:"bytes,4,opt,name=media,proto3" json:"media,omitempty"`
	Source string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *ModemState_Client) Reset() {
	*x = ModemState_Client{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modem_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModemState_Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemState_Client) ProtoMessage() {}

func (x *ModemState_Client) ProtoReflect() protoreflect.Message {
	mi := &file_modem_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModemState_Client.ProtoReflect.Descriptor instead.
func (*ModemState_Client) Descriptor() ([]byte, []int) {
	return file_modem_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ModemState_Client) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

func (x *ModemState_Client) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *ModemState_Client) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ModemState_Client) GetMedia() string {
	if x != nil {
		return x.Media
	}
	return ""
}

func (x *ModemState_Client) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type ModemState_Wifi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled     bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Ssid        string `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	ClientCount uint32 `protobuf:"varint,4,opt,name=client_count,json=clientCount,proto3" json:"client_count,omitempty"`
	Channel     uint32 `protobuf:"varint,5,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *ModemState_Wifi) Reset() {
	*x = ModemState_Wifi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modem_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModemState_Wifi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemState_Wifi) ProtoMessage() {}

func (x *ModemState_Wifi) ProtoReflect() protoreflect.Message {
	mi := &file_modem_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModemState_Wifi.ProtoReflect.Descriptor instead.
func (*ModemState_Wifi) Descriptor() ([]byte, []int) {
	return file_modem_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ModemState_Wifi) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ModemState_Wifi) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *ModemState_Wifi) GetClientCount() uint32 {
	if x != nil {
		return x.ClientCount
	}
	return 0
}

func (x *ModemState_Wifi) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

type ModemState_Battery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature float32 `protobuf:"fixed32,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Voltage     float32 `protobuf:"fixed32,2,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Soc         float32 `protobuf:"fixed32,3,opt,name=soc,proto3" json:"soc,omitempty"`
	Charging    bool    `protobuf:"varint,4,opt,name=charging,proto3" json:"charging,omitempty"`
}

func (x *ModemState_Battery) Reset() {
	*x = ModemState_Battery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modem_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModemState_Battery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemState_Battery) ProtoMessage() {}

func (x *ModemState_Battery) ProtoReflect() protoreflect.Message {
	mi := &file_modem_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModemState_Battery.ProtoReflect.Descriptor instead.
func (*ModemState_Battery) Descriptor() ([]byte, []int) {
	return file_modem_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ModemState_Battery) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ModemState_Battery) GetVoltage() float32 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *ModemState_Battery) GetSoc() float32 {
	if x != nil {
		return x.Soc
	}
	return 0
}

func (x *ModemState_Battery) GetCharging() bool {
	if x != nil {
		return x.Charging
	}
	return false
}

type ModemState_SMS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount  uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	UnreadCount uint32 `protobuf:"varint,2,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
}

func (x *ModemState_SMS) Reset() {
	*x = ModemState_SMS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modem_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModemState_SMS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemState_SMS) ProtoMessage() {}

func (x *ModemState_SMS) ProtoReflect() protoreflect.Message {
	mi := &file_modem_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModemState_SMS.ProtoReflect.Descriptor instead.
func (*ModemState_SMS) Descriptor() ([]byte, []int) {
	return file_modem_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ModemState_SMS) GetTotalCount() uint32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ModemState_SMS) GetUnreadCount() uint32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

type ModemState_WWAN_Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mcc     uint32 `protobuf:"varint,1,opt,name=mcc,proto3" json:"mcc,omitempty"`
	Mnc     uint32 `protobuf:"varint,2,opt,name=mnc,proto3" json:"mnc,omitempty"`
	Lac     uint32 `protobuf:"varint,3,opt,name=lac,proto3" json:"lac,omitempty"`
	Cid     uint32 `protobuf:"varint,4,opt,name=cid,proto3" json:"cid,omitempty"`
	Country string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *ModemState_WWAN_Network) Reset() {
	*x = ModemState_WWAN_Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modem_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModemState_WWAN_Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemState_WWAN_Network) ProtoMessage() {}

func (x *ModemState_WWAN_Network) ProtoReflect() protoreflect.Message {
	mi := &file_modem_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModemState_WWAN_Network.ProtoReflect.Descriptor instead.
func (*ModemState_WWAN_Network) Descriptor() ([]byte, []int) {
	return file_modem_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *ModemState_WWAN_Network) GetMcc() uint32 {
	if x != nil {
		return x.Mcc
	}
	return 0
}

func (x *ModemState_WWAN_Network) GetMnc() uint32 {
	if x != nil {
		return x.Mnc
	}
	return 0
}

func (x *ModemState_WWAN_Network) GetLac() uint32 {
	if x != nil {
		return x.Lac
	}
	return 0
}

func (x *ModemState_WWAN_Network) GetCid() uint32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ModemState_WWAN_Network) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type ModemState_WWAN_SignalStrength struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rssi    int32 `protobuf:"varint,1,opt,name=rssi,proto3" json:"rssi,omitempty"`
	Rscp    int32 `protobuf:"varint,2,opt,name=rscp,proto3" json:"rscp,omitempty"`
	Ecio    int32 `protobuf:"varint,3,opt,name=ecio,proto3" json:"ecio,omitempty"`
	Rsrp    int32 `protobuf:"varint,4,opt,name=rsrp,proto3" json:"rsrp,omitempty"`
	Rsrq    int32 `protobuf:"varint,5,opt,name=rsrq,proto3" json:"rsrq,omitempty"`
	Bars    int32 `protobuf:"varint,6,opt,name=bars,proto3" json:"bars,omitempty"`
	Sinr    int32 `protobuf:"varint,7,opt,name=sinr,proto3" json:"sinr,omitempty"`
	Quality int32 `protobuf:"varint,9,opt,name=quality,proto3" json:"quality,omitempty"`
	RxLevel int32 `protobuf:"varint,10,opt,name=rx_level,json=rxLevel,proto3" json:"rx_level,omitempty"`
	TxLevel int32 `protobuf:"varint,11,opt,name=tx_level,json=txLevel,proto3" json:"tx_level,omitempty"`
}

func (x *ModemState_WWAN_SignalStrength) Reset() {
	*x = ModemState_WWAN_SignalStrength{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modem_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModemState_WWAN_SignalStrength) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemState_WWAN_SignalStrength) ProtoMessage() {}

func (x *ModemState_WWAN_SignalStrength) ProtoReflect() protoreflect.Message {
	mi := &file_modem_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModemState_WWAN_SignalStrength.ProtoReflect.Descriptor instead.
func (*ModemState_WWAN_SignalStrength) Descriptor() ([]byte, []int) {
	return file_modem_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *ModemState_WWAN_SignalStrength) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *ModemState_WWAN_SignalStrength) GetRscp() int32 {
	if x != nil {
		return x.Rscp
	}
	return 0
}

func (x *ModemState_WWAN_SignalStrength) GetEcio() int32 {
	if x != nil {
		return x.Ecio
	}
	return 0
}

func (x *ModemState_WWAN_SignalStrength) GetRsrp() int32 {
	if x != nil {
		return x.Rsrp
	}
	return 0
}

func (x *ModemState_WWAN_SignalStrength) GetRsrq() int32 {
	if x != nil {
		return x.Rsrq
	}
	return 0
}

func (x *ModemState_WWAN_SignalStrength) GetBars() int32 {
	if x != nil {
		return x.Bars
	}
	return 0
}

func (x *ModemState_WWAN_SignalStrength) GetSinr() int32 {
	if x != nil {
		return x.Sinr
	}
	return 0
}

func (x *ModemState_WWAN_SignalStrength) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *ModemState_WWAN_SignalStrength) GetRxLevel() int32 {
	if x != nil {
		return x.RxLevel
	}
	return 0
}

func (x *ModemState_WWAN_SignalStrength) GetTxLevel() int32 {
	if x != nil {
		return x.TxLevel
	}
	return 0
}

type ModemState_WWAN_Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesTx  uint64 `protobuf:"varint,1,opt,name=bytes_tx,json=bytesTx,proto3" json:"bytes_tx,omitempty"`
	BytesRx  uint64 `protobuf:"varint,2,opt,name=bytes_rx,json=bytesRx,proto3" json:"bytes_rx,omitempty"`
	Duration uint32 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Start    uint32 `protobuf:"varint,4,opt,name=start,proto3" json:"start,omitempty"`
}

func (x *ModemState_WWAN_Session) Reset() {
	*x = ModemState_WWAN_Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modem_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModemState_WWAN_Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModemState_WWAN_Session) ProtoMessage() {}

func (x *ModemState_WWAN_Session) ProtoReflect() protoreflect.Message {
	mi := &file_modem_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModemState_WWAN_Session.ProtoReflect.Descriptor instead.
func (*ModemState_WWAN_Session) Descriptor() ([]byte, []int) {
	return file_modem_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *ModemState_WWAN_Session) GetBytesTx() uint64 {
	if x != nil {
		return x.BytesTx
	}
	return 0
}

func (x *ModemState_WWAN_Session) GetBytesRx() uint64 {
	if x != nil {
		return x.BytesRx
	}
	return 0
}

func (x *ModemState_WWAN_Session) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ModemState_WWAN_Session) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

var File_modem_proto protoreflect.FileDescriptor

var file_modem_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x0d,
	0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x04,
	0x77, 0x77, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x57, 0x57, 0x41, 0x4e, 0x52, 0x04, 0x77, 0x77,
	0x61, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x57, 0x69,
	0x66, 0x69, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69, 0x12, 0x2d, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x07,
	0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x03, 0x73, 0x6d, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x53, 0x4d, 0x53, 0x52, 0x03, 0x73, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x2c, 0x0a, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a,
	0xe8, 0x07, 0x0a, 0x04, 0x57, 0x57, 0x41, 0x4e, 0x12, 0x32, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x57, 0x57, 0x41, 0x4e, 0x2e, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72,
	0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70,
	0x76, 0x36, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x36, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x74, 0x75,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x51, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65,
	0x69, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x63, 0x63, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x63,
	0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x5f, 0x64, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x6e, 0x49, 0x64, 0x44, 0x6c, 0x12, 0x1c, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x5f, 0x75, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x49,
	0x64, 0x55, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x12, 0x48, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x57, 0x57, 0x41, 0x4e, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x0e, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0x6b, 0x0a, 0x07, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x63, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x63, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x6e, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x6e, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6c, 0x61, 0x63, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0xec, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x73, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x73, 0x73, 0x69, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x73, 0x63, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72,
	0x73, 0x63, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x63, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x65, 0x63, 0x69, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x73, 0x72, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x73, 0x72, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x73, 0x72, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x73, 0x72, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x61, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62,
	0x61, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x6e, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x6e, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x78, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x74, 0x78, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x71, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x79, 0x74, 0x65, 0x73, 0x54, 0x78, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x62, 0x79, 0x74, 0x65, 0x73, 0x52, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x1a, 0x70, 0x0a, 0x06, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x1a, 0x71, 0x0a, 0x04,
	0x57, 0x69, 0x66, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x1a,
	0x73, 0x0a, 0x07, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x76,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6f, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x73, 0x6f, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x67, 0x1a, 0x49, 0x0a, 0x03, 0x53, 0x4d, 0x53, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x1e, 0x5a, 0x1c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74,
	0x76, 0x30, 0x67, 0x2f, 0x76, 0x61, 0x6e, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_modem_proto_rawDescOnce sync.Once
	file_modem_proto_rawDescData = file_modem_proto_rawDesc
)

func file_modem_proto_rawDescGZIP() []byte {
	file_modem_proto_rawDescOnce.Do(func() {
		file_modem_proto_rawDescData = protoimpl.X.CompressGZIP(file_modem_proto_rawDescData)
	})
	return file_modem_proto_rawDescData
}

var file_modem_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_modem_proto_goTypes = []interface{}{
	(*ModemState)(nil),                     // 0: ModemState
	(*ModemState_WWAN)(nil),                // 1: ModemState.WWAN
	(*ModemState_Client)(nil),              // 2: ModemState.Client
	(*ModemState_Wifi)(nil),                // 3: ModemState.Wifi
	(*ModemState_Battery)(nil),             // 4: ModemState.Battery
	(*ModemState_SMS)(nil),                 // 5: ModemState.SMS
	(*ModemState_WWAN_Network)(nil),        // 6: ModemState.WWAN.Network
	(*ModemState_WWAN_SignalStrength)(nil), // 7: ModemState.WWAN.SignalStrength
	(*ModemState_WWAN_Session)(nil),        // 8: ModemState.WWAN.Session
}
var file_modem_proto_depIdxs = []int32{
	1, // 0: ModemState.wwan:type_name -> ModemState.WWAN
	3, // 1: ModemState.wifi:type_name -> ModemState.Wifi
	4, // 2: ModemState.battery:type_name -> ModemState.Battery
	5, // 3: ModemState.sms:type_name -> ModemState.SMS
	2, // 4: ModemState.clients:type_name -> ModemState.Client
	6, // 5: ModemState.WWAN.network:type_name -> ModemState.WWAN.Network
	7, // 6: ModemState.WWAN.signal_strength:type_name -> ModemState.WWAN.SignalStrength
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_modem_proto_init() }
func file_modem_proto_init() {
	if File_modem_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_modem_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModemState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modem_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModemState_WWAN); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modem_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModemState_Client); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modem_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModemState_Wifi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modem_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModemState_Battery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modem_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModemState_SMS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modem_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModemState_WWAN_Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modem_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModemState_WWAN_SignalStrength); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modem_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModemState_WWAN_Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_modem_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_modem_proto_goTypes,
		DependencyIndexes: file_modem_proto_depIdxs,
		MessageInfos:      file_modem_proto_msgTypes,
	}.Build()
	File_modem_proto = out.File
	file_modem_proto_rawDesc = nil
	file_modem_proto_goTypes = nil
	file_modem_proto_depIdxs = nil
}
